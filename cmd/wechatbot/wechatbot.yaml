app:
    version: 1.0.0
    assets-path: D:\Workspace\wechat_bot\assets
    storage: D:\Workspace\wechat_bot\storage.json
    setu: 

# RESTful 服务配置
server:
    mode: debug # server mode: release, debug, test，默认 release 对应gin的mode
    healthz: false # 是否开启健康检查，如果开启会安装 /healthz 路由，默认 true
    middlewares: recovery,logger,secure,nocache,cors,requestid # 加载的 gin 中间件列表，多个中间件，逗号(,)隔开
    max-ping-count: 10 # http 服务启动后，自检尝试次数，默认 10

# GRPC 服务配置
grpc:
  bind-address: 127.0.0.1 # grpc 安全模式的 IP 地址，默认 0.0.0.0
  bind-port: 8081 # grpc 安全模式的端口号，默认 8081
  max-msg-size: 10485760 # 1024*1024*10

# HTTP 配置
insecure:
    bind-address: 127.0.0.1 # 绑定的不安全 IP 地址，设置为 0.0.0.0 表示使用全部网络接口，默认为 127.0.0.1
    bind-port: 8080 # 提供非安全认证的监听端口，默认为 8080

# HTTPS 配置
secure:
    enable: false
    bind-address: 127.0.0.1 # HTTPS 安全模式的 IP 地址，默认为 0.0.0.0
    bind-port: 8443 # 使用 HTTPS 安全模式的端口号，设置为 0 表示不启用 HTTPS，默认为 8443
    tls:
        # cert-dir: D:\Workspace\wechat_bot\configs\cert\apiserver # TLS 证书所在的目录，默认值为 /var/run/iam
        # pair-name: iam # TLS 私钥对名称，默认 iam
        cert-key:
            cert-file:  # 包含 x509 证书的文件路径，用 HTTPS 认证
            private-key-file:  # TLS 私钥

# PostgreSQL 数据库配置
postgres:
  host: 
  port: 
  user: 
  password: 1
  dbname: 
  log-level: 1 # GORM log level, 1: silent, 2:error, 3:warn, 4:info
  flyway-path: 

# Redis 配置
redis:
  addr: 
  password:
  db: 
  name: 

log:
    name: wechat_bot # Logger的名字
    development: true # 是否是开发模式。如果是开发模式，会对DPanicLevel进行堆栈跟踪。
    level: debug # 日志级别，优先级从低到高依次为：debug, info, warn, error, dpanic, panic, fatal。
    format: console # 支持的日志输出格式，目前支持console和json两种。console其实就是text格式。
    enable-color: true # 是否开启颜色输出，true:是，false:否
    disable-caller: false # 是否开启 caller，如果开启会在日志中显示调用日志所在的文件、函数和行号
    disable-stacktrace: false # 是否再panic及以上级别禁止打印堆栈信息
    output-paths: winfile:///D:\Workspace\wechat_bot\log\wechatbot.log,stdout # 支持输出到多个输出，逗号分开。支持输出到标准输出（stdout）和文件。
    error-output-paths: winfile:///D:\Workspace\wechat_bot\log\wechatbot.error.log # zap内部(非业务)错误日志输出路径，多个输出，逗号分开

feature:
  enable-metrics: true # 开启 metrics, router:  /metrics
  profiling: true # 开启性能分析, 可以通过 <host>:<port>/debug/pprof/地址查看程序栈、线程等系统信息，默认值为 true

chatgpt:
  apiurl: 
  key: 