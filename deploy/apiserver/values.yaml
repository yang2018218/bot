# Default values for apiserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

apiServer:
  name: ms-go-apiserver
  image:
    repository: registry-vpc.cn-shanghai.aliyuncs.com/iunc/micro_service
    tag: ""
  service:
    http:
      port: 8080 # service暴露在cluster ip上的端口，通过<cluster ip>:port访问服务,通过此端口集群内的服务可以相互访问
      targetPort: 8080 # Pod的外部访问端口，port和nodePort的数据通过这个端口进入到Pod内部，Pod里面的containers的端口映射到这个端口，提供服务
    https:
      port: 8443
      targetPort: 8443
    rpc:
      port: 8081
      targetPort: 8081

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80
  loadBalancerIP: 
  name: apiserver-service

ingress:
  host:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resourcesEnable: false

resources:
  limits:
    cpu: 250m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 512Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

imageCredentials:
  registry: registry-vpc.cn-shanghai.aliyuncs.com
  username: 上海辕驰网络
  password: 
  email: 
  name: iunc-registry

livenessProbe:
  failureThreshold: 1
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 3

readinessProbe:
  failureThreshold: 3 # 如果连续1次探测失败，容器将被认为是不健康的，Kubernetes将终止该容器并尝试重新部署它
  initialDelaySeconds: 3 # 探针等待多少秒才开始进行健康检查
  periodSeconds: 3 # 健康检查的频率 x秒
  successThreshold: 1 # 在连续1次成功探测后，容器将被认为是健康的
  timeoutSeconds: 3 # 等待探测完成的最长时间，超过这个时间将被认为是探测失败。

startupProbe:
  failureThreshold: 10
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 3

ip2location:
  dbHostPath: