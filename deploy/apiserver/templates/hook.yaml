apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      imagePullSecrets:
        - name: {{ .Values.imageCredentials.name }}
      restartPolicy: Never
      terminationGracePeriodSeconds: 3
      containers:
      - name: post-install-flyway
        image: "{{ .Values.apiServer.image.repository }}:{{ .Values.apiServer.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: Always
        command:
        - /app/micro_service
        - --flyway=/app/flyway
        envFrom:
            - configMapRef:
                name: ms-go-conf
        # image: "curlimages/curl:8.5.0"
        # command: ["curl","https://api.day.app/drF3RM55u9gkEZHr6dxsHf/ms-go-dev/deployment-hook"]
        volumeMounts:
            - name: logs-volume
              mountPath: /app/logs
      volumes:
        - name: logs-volume
          # emptyDir: {}
          hostPath:
            path: /www/ms_go/hook_logs
            type: DirectoryOrCreate